# 회원관련
- 회원 가입 기능 구현
  * 사용자 닉네임 
  * 사용자 아이디
  * 사용자 이메일
  * 사용자 패스워드 입력
    -- 사용자 패스워드는 Hash화 해 저장
- 로그인 로그아웃 기능 구현
  * 로그인 인증 시 Database와 연동이 되어야 함
    -- Hash된 패스워드와 비교
  * Session을 통해 로그인 유지를 해야 함
- 회원정보 수정 기능 구현
  * Session 검사를 통해, 로그인 안한 유저는 로그인 화면으로 Redirect
  * 닉네임, 이메일, 패스워드 변경 가능하게 구현
  * 아이디를 사용자 측면에 표시해 줘야 함
    예)
       아이디: kdh
       이메일: kdh@i2sec.co.kr // 입력창에 placeholder 값을 통해 표현
       닉네임: pupu // 입력창에 placeholder 값을 통해 표현
       ...
# 게시글 관련 기능
- 게시글 리스트 뷰 구현
  * session 검사를 통해, 로그인 안한 유저는 로그인 화면으로 Redirect
  * 로그인 한 유저는 게시글 리스트 표현
  * 테이블 형태로 게시글 타이틀 등을 볼 수 잇어야 함
    예)
      게시글번호 | 게시글 타이틀 | 작성자 | 작성 시간
      1 | 샘플게시글 | pupu | 2018-09-18 09:34
- 게시글 작성 구현
  * session 검사를 통해, 로그인 안한 유저는 로그인 화면으로 Redirect
  * 로그인 한 유저는 게시글 작성 뷰 표현
    예)
       제목: 
       내용:
       파일첨부: // 파일첨부의 경우 "파일업로드-Flask 폴더 참고"
       작성 // submit 버튼이여야겠죠?
- 게시글 수정 구현
  * session 검사를 통해, 로그인 안한 유저는 로그인 화면으로 Redirect
  * 로그인 한 유저면서, 게시글 작성자만 수정 가능하게 구현
  * 수정되기 이전의 데이터를 표현해 줘야함 (HTML Placeholder 값)
- 게시글 삭제 구현
  * session 검사를 통해, 로그인 안한 유저는 로그인 화면으로 Redirect
  * 로그인 한 유저면서, 게시글 작성자만 삭제 가능하게 구현
  * Database에서 실제로 Delete Action이 발생하여야 함
    예) delete from board_tbl where idx=1;